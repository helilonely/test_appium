{"name": "test_search[alibaba]", "status": "failed", "statusDetails": {"message": "AssertionError: assert 0", "trace": "self = <test_search.TestSearch object at 0x0000025640F66B48>, name = 'alibaba'\n\n    @allure.story(\"搜索股票\")\n    @pytest.mark.yes\n    @pytest.mark.parametrize(\"name\", [\"alibaba\", \"xiaomi\"])\n    def test_search(self, name):\n        try:\n    \n            self._search.search(name)\n            if self._search.is_choozen():\n                self._search.reset()\n                self._search.add()\n            hamcrest.assert_that(self._search.is_choozen(), hamcrest.equal_to(True))\n            assert 0\n        except Exception as e:\n            self.app.save_screen_shoot(\"\")\n>           raise e\n\nscripts\\test_search.py:43: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <test_search.TestSearch object at 0x0000025640F66B48>, name = 'alibaba'\n\n    @allure.story(\"搜索股票\")\n    @pytest.mark.yes\n    @pytest.mark.parametrize(\"name\", [\"alibaba\", \"xiaomi\"])\n    def test_search(self, name):\n        try:\n    \n            self._search.search(name)\n            if self._search.is_choozen():\n                self._search.reset()\n                self._search.add()\n            hamcrest.assert_that(self._search.is_choozen(), hamcrest.equal_to(True))\n>           assert 0\nE           assert 0\n\nscripts\\test_search.py:40: AssertionError"}, "steps": [{"name": "搜索关键词", "status": "passed", "parameters": [{"name": "name", "value": "'alibaba'"}], "start": 1592330265246, "stop": 1592330269175}, {"name": "判断是否选中", "status": "passed", "start": 1592330269175, "stop": 1592330270669}, {"name": "清空选中状态", "status": "passed", "start": 1592330270669, "stop": 1592330270875}, {"name": "加自选", "status": "passed", "start": 1592330270875, "stop": 1592330271792}, {"name": "判断是否选中", "status": "passed", "start": 1592330271792, "stop": 1592330272613}], "attachments": [{"source": "f7146380-74cd-4f7a-9e66-f60797e37d3b-attachment.png", "type": "image/png"}, {"name": "log", "source": "8612768c-25a9-4298-9798-aa3da4a6207b-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "name", "value": "'alibaba'"}], "start": 1592330265246, "stop": 1592330273400, "uuid": "0047534b-b804-4790-8e5f-46dfe4147d31", "historyId": "9425f3e6b7c1755c2c7afa7549255565", "testCaseId": "4b48e6925072f81fa93dfa41e68a9855", "fullName": "scripts.test_search.TestSearch#test_search", "labels": [{"name": "feature", "value": "雪球搜索功能"}, {"name": "story", "value": "搜索股票"}, {"name": "tag", "value": "yes"}, {"name": "parentSuite", "value": "scripts"}, {"name": "suite", "value": "test_search"}, {"name": "subSuite", "value": "TestSearch"}, {"name": "host", "value": "LAPTOP-GVIPSB4C"}, {"name": "thread", "value": "14556-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "scripts.test_search"}]}