{"name": "test_search[alibaba]", "status": "broken", "statusDetails": {"message": "TypeError: a bytes-like object is required, not '_io.BufferedReader'", "trace": "self = <test_search.TestSearch object at 0x000002577DFB3B88>, name = 'alibaba'\n\n    @allure.story(\"搜索股票\")\n    @pytest.mark.yes\n    @pytest.mark.parametrize(\"name\", [\"alibaba\", \"xiaomi\"])\n    def test_search(self, name):\n        try:\n            self._search.search(name)\n            # self._search.add()\n            if self._search.is_choozen():\n                self._search.reset()\n                self._search.add()\n            hamcrest.assert_that(self._search.is_choozen(), hamcrest.equal_to(True))\n>           assert 0\nE           AssertionError: assert 0\n\nscripts\\test_search.py:36: AssertionError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_search.TestSearch object at 0x000002577DFB3B88>, name = 'alibaba'\n\n    @allure.story(\"搜索股票\")\n    @pytest.mark.yes\n    @pytest.mark.parametrize(\"name\", [\"alibaba\", \"xiaomi\"])\n    def test_search(self, name):\n        try:\n            self._search.search(name)\n            # self._search.add()\n            if self._search.is_choozen():\n                self._search.reset()\n                self._search.add()\n            hamcrest.assert_that(self._search.is_choozen(), hamcrest.equal_to(True))\n            assert 0\n        except Exception as e:\n>           self.app.save_screen_shoot(\"\")\n\nscripts\\test_search.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \nbase\\basePage.py:37: in save_screen_shoot\n    allure.attach(content,allure.attachment_type.PNG)\nc:\\testtools\\python\\python37\\lib\\site-packages\\allure_commons\\_allure.py:164: in __call__\n    plugin_manager.hook.attach_data(body=body, name=name, attachment_type=attachment_type, extension=extension)\nc:\\testtools\\python\\python37\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nc:\\testtools\\python\\python37\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nc:\\testtools\\python\\python37\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\nc:\\testtools\\python\\python37\\lib\\site-packages\\allure_pytest\\listener.py:215: in attach_data\n    self.allure_logger.attach_data(uuid4(), body, name=name, attachment_type=attachment_type, extension=extension)\nc:\\testtools\\python\\python37\\lib\\site-packages\\allure_commons\\reporter.py:117: in attach_data\n    plugin_manager.hook.report_attached_data(body=body, file_name=file_name)\nc:\\testtools\\python\\python37\\lib\\site-packages\\pluggy\\hooks.py:286: in __call__\n    return self._hookexec(self, self.get_hookimpls(), kwargs)\nc:\\testtools\\python\\python37\\lib\\site-packages\\pluggy\\manager.py:93: in _hookexec\n    return self._inner_hookexec(hook, methods, kwargs)\nc:\\testtools\\python\\python37\\lib\\site-packages\\pluggy\\manager.py:87: in <lambda>\n    firstresult=hook.spec.opts.get(\"firstresult\") if hook.spec else False,\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <allure_commons.logger.AllureFileLogger object at 0x000002577DAC2408>, body = <_io.BufferedReader name='C:\\\\Users\\\\heli\\\\PycharmProjects\\\\diy_appium/imgs/_2020_06_17 01_33_57.png'>\nfile_name = 'b5a9e9ed-0ecc-4f0c-befc-3e3150093b84-attachment.attach'\n\n    @hookimpl\n    def report_attached_data(self, body, file_name):\n        destination = os.path.join(self._report_dir, file_name)\n        with open(destination, 'wb') as attached_file:\n            if isinstance(body, text_type):\n                attached_file.write(body.encode('utf-8'))\n            else:\n>               attached_file.write(body)\nE               TypeError: a bytes-like object is required, not '_io.BufferedReader'\n\nc:\\testtools\\python\\python37\\lib\\site-packages\\allure_commons\\logger.py:62: TypeError"}, "attachments": [{"name": 